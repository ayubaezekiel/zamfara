/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TeamRouteImport } from './routes/team'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as NewsNewsIdRouteImport } from './routes/news/$newsId'
import { Route as AdminLoginRouteImport } from './routes/admin/login'

const NewsIndexLazyRouteImport = createFileRoute('/news/')()

const TeamRoute = TeamRouteImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsIndexLazyRoute = NewsIndexLazyRouteImport.update({
  id: '/news/',
  path: '/news/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/news/index.lazy').then((d) => d.Route))
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsNewsIdRoute = NewsNewsIdRouteImport.update({
  id: '/news/$newsId',
  path: '/news/$newsId',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLoginRoute = AdminLoginRouteImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/team': typeof TeamRoute
  '/admin/login': typeof AdminLoginRoute
  '/news/$newsId': typeof NewsNewsIdRoute
  '/admin': typeof AdminIndexRoute
  '/news': typeof NewsIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/team': typeof TeamRoute
  '/admin/login': typeof AdminLoginRoute
  '/news/$newsId': typeof NewsNewsIdRoute
  '/admin': typeof AdminIndexRoute
  '/news': typeof NewsIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/team': typeof TeamRoute
  '/admin/login': typeof AdminLoginRoute
  '/news/$newsId': typeof NewsNewsIdRoute
  '/admin/': typeof AdminIndexRoute
  '/news/': typeof NewsIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/team'
    | '/admin/login'
    | '/news/$newsId'
    | '/admin'
    | '/news'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/team'
    | '/admin/login'
    | '/news/$newsId'
    | '/admin'
    | '/news'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/team'
    | '/admin/login'
    | '/news/$newsId'
    | '/admin/'
    | '/news/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  TeamRoute: typeof TeamRoute
  AdminLoginRoute: typeof AdminLoginRoute
  NewsNewsIdRoute: typeof NewsNewsIdRoute
  AdminIndexRoute: typeof AdminIndexRoute
  NewsIndexLazyRoute: typeof NewsIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/team': {
      id: '/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news/': {
      id: '/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news/$newsId': {
      id: '/news/$newsId'
      path: '/news/$newsId'
      fullPath: '/news/$newsId'
      preLoaderRoute: typeof NewsNewsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  TeamRoute: TeamRoute,
  AdminLoginRoute: AdminLoginRoute,
  NewsNewsIdRoute: NewsNewsIdRoute,
  AdminIndexRoute: AdminIndexRoute,
  NewsIndexLazyRoute: NewsIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
